@model PagedList.IPagedList<ASC_Coil_Tracker_Production.Models.COILTABLEHISTORY>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<!-- Show prompt if not logged in -->
@if (Session["Email"] == null)
{
    <span>You must be logged in to view this page!</span>
    @Html.ActionLink("Back to Login", "Login", "Home")
}
else
{
    <div class="row mb-3">
        <div class="col-md-6">
            <p>New records can be added through the Add Record button or details page for a given coil.</p>
        </div>
        <div class="col-md-6">
            @using (Ajax.BeginForm("Index", "HistoryEvent", new AjaxOptions { HttpMethod = "Get" },
                new { @class = "form-inline justify-content-end" }))
            {
                <!-- hidden current fields -->
                @Html.Hidden("sortOrder", (object)ViewBag.CurrentSort);

                @Html.DropDownList("SearchFilter", (SelectList)ViewBag.SearchList, new { @class = "custom-select mx-2" })
                @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @id = "searchString", @class = "form-control", @placeholder = "Type to start searching" })
            }
            @Html.ValidationMessage("DateFormatError", new { @class = "text-danger float-right" })
        </div>
    </div>

    <div class="container-fluid container-table p-0">
        <table class="table m-0">
            <thead>
                <tr>
                    <th>
                        <a href="@Url.Action("Index", new { sortOrder = ViewBag.IDSortParm, currentFilter = ViewBag.CurrentFilter, currentSearchFilter = ViewBag.CurrentSearchFilter })" class="a-sort">
                            Coil ID<i class="fa fa-fw fa-sort"></i>
                        </a>
                    </th>
                    <th>
                        <a href="@Url.Action("Index", new { sortOrder = ViewBag.IDSortParm, currentFilter = ViewBag.CurrentFilter, currentSearchFilter = ViewBag.CurrentSearchFilter })" class="a-sort">
                            Date<i class="fa fa-fw fa-sort"></i>
                        </a>
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().AMOUNTUSED)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().JOBNUMBER)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FirstOrDefault().NOTES)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.ActionLink((item.COILID).ToString(), "Details", "Coil", new { id = item.COILID }, null)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DATE)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AMOUNTUSED)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.JOBNUMBER)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NOTES)
                        </td>
                        <td>
                            <div class="btn-group d-flex" role="group">
                                <button type="button" class="btn btn-outline-primary dropdown-toggle" data-toggle="dropdown">
                                    Actions
                                </button>
                                <div class="dropdown-menu">
                                    <a href="@Url.Action("Edit", new {id = item.ID})" class="btn btn-outline-primary dropdown-item">
                                        <i class="fas fa-edit"></i>
                                        Edit
                                    </a>
                                    <a href="@Url.Action("Details", new {id = item.ID})" class="btn btn-outline-primary dropdown-item">
                                        <i class="fas fa-info-circle"></i>
                                        Details
                                    </a>
                                    <a href="@Url.Action("Delete", new {id = item.ID})" class="btn btn-outline-primary dropdown-item">
                                        <i class="fas fa-trash"></i>
                                        Delete
                                    </a>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <br />

    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, currentSearchFilter = ViewBag.CurrentSearchFilter }))

    <span>
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </span>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.js")
    @Scripts.Render("~/Scripts/helpers/OnFilterChange.js")
}