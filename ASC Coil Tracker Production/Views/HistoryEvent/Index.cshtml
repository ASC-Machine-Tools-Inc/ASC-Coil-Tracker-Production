@model PagedList.IPagedList<ASC_Coil_Tracker_Production.Models.COILTABLEHISTORY>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<div class="row mb-3">
    <div class="col-md-6">
        <p>New records can be added through the Add Record button or details page for a given coil.</p>
    </div>
    <div class="col-md-6">
        @using (Ajax.BeginForm("Index", "HistoryEvent", new AjaxOptions { HttpMethod = "Get" },
            new { @class = "form-inline justify-content-end" }))
        {
            <!-- hidden current fields -->
            @Html.Hidden("sortOrder", (object)ViewBag.CurrentSort);

            @Html.DropDownList("SearchFilter", (SelectList)ViewBag.SearchList, new { @class = "custom-select mx-2" })
            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @id = "searchString", @class = "form-control", @placeholder = "Search" })
        }
        @Html.ValidationMessage("DateFormatError", new { @class = "text-danger float-right" })
    </div>
</div>

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Coil ID", "Index", new
            {
                sortOrder = ViewBag.IDSortParm,
                currentFilter = ViewBag.CurrentFilter,
                currentSearchFilter = ViewBag.CurrentSearchFilter
            })
        </th>
        <th>
            @Html.ActionLink("Date", "Index", new
            {
                sortOrder = ViewBag.DateSortParm,
                currentFilter = ViewBag.CurrentFilter,
                currentSearchFilter = ViewBag.CurrentSearchFilter
            })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().AMOUNTUSED)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().JOBNUMBER)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().NOTES)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.ActionLink((item.COILID).ToString(), "Details", "Coil", new { id = item.COILID }, null)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DATE)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AMOUNTUSED)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.JOBNUMBER)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NOTES)
            </td>
            <td>
                <div class="btn-group d-flex" role="group">
                    <button type="button" class="btn btn-outline-primary dropdown-toggle" data-toggle="dropdown">
                        Actions
                    </button>
                    <div class="dropdown-menu">
                        <a href="@Url.Action("Edit", new { id=item.ID })" class="btn btn-outline-primary dropdown-item">
                            <i class="fas fa-edit"></i>
                            Edit
                        </a>
                        <a href="@Url.Action("Details", new { id=item.ID })" class="btn btn-outline-primary dropdown-item">
                            <i class="fas fa-info-circle"></i>
                            Details
                        </a>
                        <a href="@Url.Action("Delete", new { id=item.ID })" class="btn btn-outline-primary dropdown-item">
                            <i class="fas fa-trash"></i>
                            Delete
                        </a>
                    </div>
                </div>
            </td>
        </tr>
    }
</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, currentSearchFilter = ViewBag.CurrentSearchFilter }))

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.js")
    @Scripts.Render("~/Scripts/helpers/OnFilterChange.js")
}